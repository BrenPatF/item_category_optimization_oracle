
Database             Time                 Version
-------------------- -------------------- ------------------------------
Start: ORCL          14-JUN-2024 10:37:04 Version 21.3.0.0.0

Truncate paths

Table truncated.

old   2:     :MAX_PRICE := &MAX_PRICE;
new   2:     :MAX_PRICE := 8000;

PL/SQL procedure successfully completed.

Recompile item_cat_seqs.pkb

Package body created.

No errors.
Just set context values: SEQ_SIZE = 12, MAX_PRICE = 8000, ITEM_WIDTH = 3, TOP_N = 10
Previously set context values: SEQ_TYPE = , MIN_VALUE = , KEEP_NUM =

PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.

Pop_Table_Iterate
11 running sums
SQL_ID  323bar13mrwwy, child number 0
-------------------------------------
INSERT /*+ gather_plan_statistics INSERT_PATHS */ INTO PATHS (
PATH_RNK, ITEM_RNK, LEV, TOT_PRICE, TOT_VALUE, CAT_ID, NEXT_CAT_ID,
SAME_CATS, MIN_ITEMS, CATS_PATH, PATH ) WITH PATH_JOIN AS ( SELECT
ROW_NUMBER() OVER (PARTITION BY TRW.CATS_PATH || IRK.CAT_ID ORDER BY
TRW.TOT_VALUE + IRK.ITEM_VALUE DESC, TRW.TOT_PRICE + IRK.ITEM_PRICE)
PATH_RNK, IRK.ITEM_RNK, :B6 LEV, TRW.TOT_PRICE + IRK.ITEM_PRICE
TOT_PRICE, TRW.TOT_VALUE + IRK.ITEM_VALUE TOT_VALUE, IRK.CAT_ID,
IRK.NEXT_CAT_ID, CASE IRK.CAT_ID WHEN TRW.CAT_ID THEN TRW.SAME_CATS + 1
ELSE 1 END SAME_CATS, IRK.MIN_ITEMS, TRW.CATS_PATH || IRK.CAT_ID
CATS_PATH, TRW.PATH || IRK.ITEM_ID PATH FROM PATHS TRW JOIN
ITEMS_RANKED IRK ON IRK.ITEM_RNK BETWEEN (TRW.ITEM_RNK + 1) AND
(IRK.N_ITEMS - (:B1 - TRW.LEV - 1)) WHERE TRW.TOT_PRICE +
IRK.ITEM_PRICE + :B5 <= :B4 AND TRW.TOT_VALUE + IRK.ITEM_VALUE + :B3 >=
:B2 AND TRW.LEV < :B1 AND CASE IRK.CAT_ID WHEN TRW.CAT_ID THEN
TRW.SAME_CATS + 1 ELSE 1 END <= IRK.MAX_ITEMS AND :B1 - (TRW.LEV + 1) +
LEAST(CAS
Plan hash value: 1216662075
---------------------------------------------------------------------------------------------------------
| Id  | Operation                | Name               | Starts | E-Rows | A-Rows |   A-Time   | Buffers |
---------------------------------------------------------------------------------------------------------
|   0 | INSERT STATEMENT         |                    |      1 |        |      0 |00:00:00.01 |       3 |
|   1 |  LOAD TABLE CONVENTIONAL | PATHS              |      1 |        |      0 |00:00:00.01 |       3 |
|*  2 |   VIEW                   |                    |      1 |      1 |      0 |00:00:00.01 |       3 |
|   3 |    WINDOW SORT           |                    |      1 |      1 |      0 |00:00:00.01 |       3 |
|   4 |     NESTED LOOPS         |                    |      1 |      1 |      0 |00:00:00.01 |       3 |
|*  5 |      TABLE ACCESS FULL   | PATHS              |      1 |      1 |      0 |00:00:00.01 |       3 |
|*  6 |      INDEX RANGE SCAN    | SYS_IOT_TOP_179621 |      0 |      1 |      0 |00:00:00.01 |       0 |
---------------------------------------------------------------------------------------------------------
Predicate Information (identified by operation id):
---------------------------------------------------
2 - filter(("PATH_RNK"<=:B7 OR :B7=0))
5 - filter("TRW"."LEV"<:B1)
6 - access("IRK"."ITEM_RNK">="TRW"."ITEM_RNK"+1)
filter(("TRW"."TOT_PRICE"+"IRK"."ITEM_PRICE"+:B5<=:B4 AND
"TRW"."TOT_VALUE"+"IRK"."ITEM_VALUE"+:B3>=:B2 AND
"IRK"."ITEM_RNK"<="IRK"."N_ITEMS"-(:B1-"TRW"."LEV"-1) AND "IRK"."MAX_ITEMS">=CASE "IRK"."CAT_ID"
WHEN "TRW"."CAT_ID" THEN "TRW"."SAME_CATS"+1 ELSE 1 END  AND
"IRK"."MIN_REMAIN"<=:B1-("TRW"."LEV"+1)+LEAST(CASE "IRK"."CAT_ID" WHEN "TRW"."CAT_ID" THEN
"TRW"."SAME_CATS"+1 ELSE 1 END ,"IRK"."MIN_ITEMS") AND ("IRK"."CAT_ID"="TRW"."CAT_ID" OR
"TRW"."SAME_CATS">="TRW"."MIN_ITEMS") AND ("IRK"."CAT_ID"="TRW"."CAT_ID" OR
"IRK"."CAT_ID"=NVL("TRW"."NEXT_CAT_ID","IRK"."CAT_ID"))))
Note
-----
- dynamic statistics used: dynamic sampling (level=2)
Timer Set: Pop_Table_Iterate, Constructed at 14 Jun 2024 10:37:04, written at 10:37:04
======================================================================================
Timer                   Elapsed         CPU       Calls       Ela/Call       CPU/Call
-------------------  ----------  ----------  ----------  -------------  -------------
Initial delete (0)         0.03        0.01           1        0.03400        0.01000
Initial insert (1)         0.00        0.00           1        0.00200        0.00000
Insert paths 1 (10)        0.01        0.02           1        0.01100        0.02000
Delete paths 1 (1)         0.00        0.00           1        0.00300        0.00000
Insert paths 2 (10)        0.00        0.00           1        0.00100        0.00000
Delete paths 2 (10)        0.00        0.00           1        0.00000        0.00000
Insert paths 3 (10)        0.00        0.00           1        0.00100        0.00000
Delete paths 3 (10)        0.00        0.00           1        0.00000        0.00000
Insert paths 4 (10)        0.00        0.00           1        0.00000        0.00000
Delete paths 4 (10)        0.00        0.00           1        0.00000        0.00000
Insert paths 5 (20)        0.00        0.00           1        0.00100        0.00000
Delete paths 5 (10)        0.00        0.00           1        0.00000        0.00000
Insert paths 6 (20)        0.00        0.00           1        0.00000        0.00000
Delete paths 6 (20)        0.00        0.00           1        0.00100        0.00000
Insert paths 7 (16)        0.00        0.00           1        0.00000        0.00000
Delete paths 7 (20)        0.00        0.00           1        0.00000        0.00000
Insert paths 8 (5)         0.00        0.00           1        0.00000        0.00000
Delete paths 8 (16)        0.00        0.00           1        0.00000        0.00000
Insert paths 9 (0)         0.00        0.00           1        0.00000        0.00000
Delete paths 9 (5)         0.00        0.00           1        0.00000        0.00000
Insert paths 10 (0)        0.18        0.15           1        0.17500        0.15000
Delete paths 10 (0)        0.00        0.00           1        0.00000        0.00000
Insert paths 11 (0)        0.00        0.00           1        0.00100        0.00000
Delete paths 11 (0)        0.00        0.00           1        0.00000        0.00000
Insert paths 12 (0)        0.00        0.00           1        0.00000        0.00000
Delete paths 12 (0)        0.00        0.00           1        0.00000        0.00000
(Other)                    0.00        0.00           1        0.00000        0.00000
-------------------  ----------  ----------  ----------  -------------  -------------
Total                      0.23        0.18          27        0.00852        0.00667
-------------------  ----------  ----------  ----------  -------------  -------------
[Timer timed (per call in ms): Elapsed: 0.00901, CPU: 0.00721]
SQL_ID  323bar13mrwwy, child number 0
-------------------------------------
INSERT /*+ gather_plan_statistics INSERT_PATHS */ INTO PATHS (
PATH_RNK, ITEM_RNK, LEV, TOT_PRICE, TOT_VALUE, CAT_ID, NEXT_CAT_ID,
SAME_CATS, MIN_ITEMS, CATS_PATH, PATH ) WITH PATH_JOIN AS ( SELECT
ROW_NUMBER() OVER (PARTITION BY TRW.CATS_PATH || IRK.CAT_ID ORDER BY
TRW.TOT_VALUE + IRK.ITEM_VALUE DESC, TRW.TOT_PRICE + IRK.ITEM_PRICE)
PATH_RNK, IRK.ITEM_RNK, :B6 LEV, TRW.TOT_PRICE + IRK.ITEM_PRICE
TOT_PRICE, TRW.TOT_VALUE + IRK.ITEM_VALUE TOT_VALUE, IRK.CAT_ID,
IRK.NEXT_CAT_ID, CASE IRK.CAT_ID WHEN TRW.CAT_ID THEN TRW.SAME_CATS + 1
ELSE 1 END SAME_CATS, IRK.MIN_ITEMS, TRW.CATS_PATH || IRK.CAT_ID
CATS_PATH, TRW.PATH || IRK.ITEM_ID PATH FROM PATHS TRW JOIN
ITEMS_RANKED IRK ON IRK.ITEM_RNK BETWEEN (TRW.ITEM_RNK + 1) AND
(IRK.N_ITEMS - (:B1 - TRW.LEV - 1)) WHERE TRW.TOT_PRICE +
IRK.ITEM_PRICE + :B5 <= :B4 AND TRW.TOT_VALUE + IRK.ITEM_VALUE + :B3 >=
:B2 AND TRW.LEV < :B1 AND CASE IRK.CAT_ID WHEN TRW.CAT_ID THEN
TRW.SAME_CATS + 1 ELSE 1 END <= IRK.MAX_ITEMS AND :B1 - (TRW.LEV + 1) +
LEAST(CAS
Plan hash value: 1216662075
------------------------------------------------------------------------------------------------------------------------------------
| Id  | Operation                | Name               | Starts | E-Rows | A-Rows |   A-Time   | Buffers |  OMem |  1Mem | Used-Mem |
------------------------------------------------------------------------------------------------------------------------------------
|   0 | INSERT STATEMENT         |                    |      1 |        |      0 |00:00:00.01 |       8 |       |       |          |
|   1 |  LOAD TABLE CONVENTIONAL | PATHS              |      1 |        |      0 |00:00:00.01 |       8 |       |       |          |
|*  2 |   VIEW                   |                    |      1 |      1 |     23 |00:00:00.01 |       7 |       |       |          |
|   3 |    WINDOW SORT           |                    |      1 |      1 |     23 |00:00:00.01 |       7 |  6144 |  6144 | 6144  (0)|
|   4 |     NESTED LOOPS         |                    |      1 |      1 |     23 |00:00:00.01 |       7 |       |       |          |
|*  5 |      TABLE ACCESS FULL   | PATHS              |      1 |      1 |     30 |00:00:00.01 |       4 |       |       |          |
|*  6 |      INDEX RANGE SCAN    | SYS_IOT_TOP_179621 |     30 |      1 |     23 |00:00:00.01 |       3 |       |       |          |
------------------------------------------------------------------------------------------------------------------------------------
Predicate Information (identified by operation id):
---------------------------------------------------
2 - filter(("PATH_RNK"<=:B7 OR :B7=0))
5 - filter("TRW"."LEV"<:B1)
6 - access("IRK"."ITEM_RNK">="TRW"."ITEM_RNK"+1)
filter(("TRW"."TOT_PRICE"+"IRK"."ITEM_PRICE"+:B5<=:B4 AND "TRW"."TOT_VALUE"+"IRK"."ITEM_VALUE"+:B3>=:B2 AND
"IRK"."ITEM_RNK"<="IRK"."N_ITEMS"-(:B1-"TRW"."LEV"-1) AND "IRK"."MAX_ITEMS">=CASE "IRK"."CAT_ID" WHEN "TRW"."CAT_ID" THEN
"TRW"."SAME_CATS"+1 ELSE 1 END  AND "IRK"."MIN_REMAIN"<=:B1-("TRW"."LEV"+1)+LEAST(CASE "IRK"."CAT_ID" WHEN "TRW"."CAT_ID"
THEN "TRW"."SAME_CATS"+1 ELSE 1 END ,"IRK"."MIN_ITEMS") AND ("IRK"."CAT_ID"="TRW"."CAT_ID" OR
"TRW"."SAME_CATS">="TRW"."MIN_ITEMS") AND ("IRK"."CAT_ID"="TRW"."CAT_ID" OR
"IRK"."CAT_ID"=NVL("TRW"."NEXT_CAT_ID","IRK"."CAT_ID"))))
Note
-----
- dynamic statistics used: dynamic sampling (level=2)
Timer Set: Pop_Table_Iterate, Constructed at 14 Jun 2024 10:37:04, written at 10:37:04
======================================================================================
Timer                    Elapsed         CPU       Calls       Ela/Call       CPU/Call
--------------------  ----------  ----------  ----------  -------------  -------------
Initial delete (0)          0.00        0.00           1        0.00000        0.00000
Initial insert (1)          0.00        0.00           1        0.00000        0.00000
Insert paths 1 (20)         0.00        0.00           1        0.00100        0.00000
Delete paths 1 (1)          0.00        0.00           1        0.00000        0.00000
Insert paths 2 (30)         0.00        0.00           1        0.00100        0.00000
Delete paths 2 (20)         0.00        0.00           1        0.00100        0.00000
Insert paths 3 (30)         0.00        0.00           1        0.00100        0.00000
Delete paths 3 (30)         0.00        0.00           1        0.00000        0.00000
Insert paths 4 (30)         0.00        0.00           1        0.00100        0.00000
Delete paths 4 (30)         0.00        0.00           1        0.00000        0.00000
Insert paths 5 (60)         0.00        0.01           1        0.00100        0.01000
Delete paths 5 (30)         0.00        0.00           1        0.00100        0.00000
Insert paths 6 (60)         0.00        0.00           1        0.00100        0.00000
Delete paths 6 (60)         0.00        0.00           1        0.00000        0.00000
Insert paths 7 (60)         0.00        0.00           1        0.00100        0.00000
Delete paths 7 (60)         0.00        0.00           1        0.00000        0.00000
Insert paths 8 (24)         0.00        0.00           1        0.00100        0.00000
Delete paths 8 (60)         0.00        0.00           1        0.00000        0.00000
Insert paths 9 (30)         0.00        0.00           1        0.00000        0.00000
Delete paths 9 (24)         0.00        0.00           1        0.00000        0.00000
Insert paths 10 (23)        0.18        0.13           1        0.17600        0.13000
Delete paths 10 (30)        0.00        0.00           1        0.00000        0.00000
Insert paths 11 (0)         0.00        0.00           1        0.00000        0.00000
Delete paths 11 (23)        0.00        0.00           1        0.00000        0.00000
Insert paths 12 (0)         0.00        0.00           1        0.00000        0.00000
Delete paths 12 (0)         0.00        0.00           1        0.00000        0.00000
(Other)                     0.00        0.00           1        0.00000        0.00000
--------------------  ----------  ----------  ----------  -------------  -------------
Total                       0.19        0.14          27        0.00689        0.00519
--------------------  ----------  ----------  ----------  -------------  -------------
[Timer timed (per call in ms): Elapsed: 0.00870, CPU: 0.00870]
SQL_ID  323bar13mrwwy, child number 0
-------------------------------------
INSERT /*+ gather_plan_statistics INSERT_PATHS */ INTO PATHS (
PATH_RNK, ITEM_RNK, LEV, TOT_PRICE, TOT_VALUE, CAT_ID, NEXT_CAT_ID,
SAME_CATS, MIN_ITEMS, CATS_PATH, PATH ) WITH PATH_JOIN AS ( SELECT
ROW_NUMBER() OVER (PARTITION BY TRW.CATS_PATH || IRK.CAT_ID ORDER BY
TRW.TOT_VALUE + IRK.ITEM_VALUE DESC, TRW.TOT_PRICE + IRK.ITEM_PRICE)
PATH_RNK, IRK.ITEM_RNK, :B6 LEV, TRW.TOT_PRICE + IRK.ITEM_PRICE
TOT_PRICE, TRW.TOT_VALUE + IRK.ITEM_VALUE TOT_VALUE, IRK.CAT_ID,
IRK.NEXT_CAT_ID, CASE IRK.CAT_ID WHEN TRW.CAT_ID THEN TRW.SAME_CATS + 1
ELSE 1 END SAME_CATS, IRK.MIN_ITEMS, TRW.CATS_PATH || IRK.CAT_ID
CATS_PATH, TRW.PATH || IRK.ITEM_ID PATH FROM PATHS TRW JOIN
ITEMS_RANKED IRK ON IRK.ITEM_RNK BETWEEN (TRW.ITEM_RNK + 1) AND
(IRK.N_ITEMS - (:B1 - TRW.LEV - 1)) WHERE TRW.TOT_PRICE +
IRK.ITEM_PRICE + :B5 <= :B4 AND TRW.TOT_VALUE + IRK.ITEM_VALUE + :B3 >=
:B2 AND TRW.LEV < :B1 AND CASE IRK.CAT_ID WHEN TRW.CAT_ID THEN
TRW.SAME_CATS + 1 ELSE 1 END <= IRK.MAX_ITEMS AND :B1 - (TRW.LEV + 1) +
LEAST(CAS
Plan hash value: 1216662075
------------------------------------------------------------------------------------------------------------------------------------
| Id  | Operation                | Name               | Starts | E-Rows | A-Rows |   A-Time   | Buffers |  OMem |  1Mem | Used-Mem |
------------------------------------------------------------------------------------------------------------------------------------
|   0 | INSERT STATEMENT         |                    |      1 |        |      0 |00:00:00.01 |      12 |       |       |          |
|   1 |  LOAD TABLE CONVENTIONAL | PATHS              |      1 |        |      0 |00:00:00.01 |      12 |       |       |          |
|*  2 |   VIEW                   |                    |      1 |      1 |     68 |00:00:00.01 |       9 |       |       |          |
|   3 |    WINDOW SORT           |                    |      1 |      1 |     68 |00:00:00.01 |       9 | 20480 | 20480 |18432  (0)|
|   4 |     NESTED LOOPS         |                    |      1 |      1 |     68 |00:00:00.01 |       9 |       |       |          |
|*  5 |      TABLE ACCESS FULL   | PATHS              |      1 |      1 |     92 |00:00:00.01 |       6 |       |       |          |
|*  6 |      INDEX RANGE SCAN    | SYS_IOT_TOP_179621 |     92 |      1 |     68 |00:00:00.01 |       3 |       |       |          |
------------------------------------------------------------------------------------------------------------------------------------
Predicate Information (identified by operation id):
---------------------------------------------------
2 - filter(("PATH_RNK"<=:B7 OR :B7=0))
5 - filter("TRW"."LEV"<:B1)
6 - access("IRK"."ITEM_RNK">="TRW"."ITEM_RNK"+1)
filter(("TRW"."TOT_PRICE"+"IRK"."ITEM_PRICE"+:B5<=:B4 AND "TRW"."TOT_VALUE"+"IRK"."ITEM_VALUE"+:B3>=:B2 AND
"IRK"."ITEM_RNK"<="IRK"."N_ITEMS"-(:B1-"TRW"."LEV"-1) AND "IRK"."MAX_ITEMS">=CASE "IRK"."CAT_ID" WHEN "TRW"."CAT_ID" THEN
"TRW"."SAME_CATS"+1 ELSE 1 END  AND "IRK"."MIN_REMAIN"<=:B1-("TRW"."LEV"+1)+LEAST(CASE "IRK"."CAT_ID" WHEN "TRW"."CAT_ID"
THEN "TRW"."SAME_CATS"+1 ELSE 1 END ,"IRK"."MIN_ITEMS") AND ("IRK"."CAT_ID"="TRW"."CAT_ID" OR
"TRW"."SAME_CATS">="TRW"."MIN_ITEMS") AND ("IRK"."CAT_ID"="TRW"."CAT_ID" OR
"IRK"."CAT_ID"=NVL("TRW"."NEXT_CAT_ID","IRK"."CAT_ID"))))
Note
-----
- dynamic statistics used: dynamic sampling (level=2)
Timer Set: Pop_Table_Iterate, Constructed at 14 Jun 2024 10:37:05, written at 10:37:05
======================================================================================
Timer                    Elapsed         CPU       Calls       Ela/Call       CPU/Call
--------------------  ----------  ----------  ----------  -------------  -------------
Initial delete (0)          0.00        0.00           1        0.00000        0.00000
Initial insert (1)          0.00        0.00           1        0.00000        0.00000
Insert paths 1 (20)         0.00        0.00           1        0.00000        0.00000
Delete paths 1 (1)          0.00        0.00           1        0.00000        0.00000
Insert paths 2 (90)         0.00        0.00           1        0.00300        0.00000
Delete paths 2 (20)         0.00        0.00           1        0.00000        0.00000
Insert paths 3 (90)         0.01        0.00           1        0.00600        0.00000
Delete paths 3 (90)         0.00        0.00           1        0.00000        0.00000
Insert paths 4 (90)         0.00        0.00           1        0.00400        0.00000
Delete paths 4 (90)         0.00        0.00           1        0.00100        0.00000
Insert paths 5 (180)        0.01        0.00           1        0.00500        0.00000
Delete paths 5 (90)         0.00        0.00           1        0.00000        0.00000
Insert paths 6 (180)        0.01        0.01           1        0.00600        0.01000
Delete paths 6 (180)        0.00        0.00           1        0.00100        0.00000
Insert paths 7 (176)        0.00        0.00           1        0.00300        0.00000
Delete paths 7 (180)        0.00        0.00           1        0.00000        0.00000
Insert paths 8 (76)         0.00        0.00           1        0.00300        0.00000
Delete paths 8 (176)        0.00        0.00           1        0.00000        0.00000
Insert paths 9 (92)         0.00        0.00           1        0.00100        0.00000
Delete paths 9 (76)         0.00        0.00           1        0.00000        0.00000
Insert paths 10 (68)        0.20        0.19           1        0.20400        0.19000
Delete paths 10 (92)        0.00        0.00           1        0.00100        0.00000
Insert paths 11 (0)         0.00        0.00           1        0.00000        0.00000
Delete paths 11 (68)        0.00        0.00           1        0.00000        0.00000
Insert paths 12 (0)         0.00        0.00           1        0.00000        0.00000
Delete paths 12 (0)         0.00        0.00           1        0.00000        0.00000
(Other)                     0.00        0.00           1        0.00000        0.00000
--------------------  ----------  ----------  ----------  -------------  -------------
Total                       0.24        0.20          27        0.00881        0.00741
--------------------  ----------  ----------  ----------  -------------  -------------
[Timer timed (per call in ms): Elapsed: 0.01205, CPU: 0.01084]
SQL_ID  323bar13mrwwy, child number 0
-------------------------------------
INSERT /*+ gather_plan_statistics INSERT_PATHS */ INTO PATHS (
PATH_RNK, ITEM_RNK, LEV, TOT_PRICE, TOT_VALUE, CAT_ID, NEXT_CAT_ID,
SAME_CATS, MIN_ITEMS, CATS_PATH, PATH ) WITH PATH_JOIN AS ( SELECT
ROW_NUMBER() OVER (PARTITION BY TRW.CATS_PATH || IRK.CAT_ID ORDER BY
TRW.TOT_VALUE + IRK.ITEM_VALUE DESC, TRW.TOT_PRICE + IRK.ITEM_PRICE)
PATH_RNK, IRK.ITEM_RNK, :B6 LEV, TRW.TOT_PRICE + IRK.ITEM_PRICE
TOT_PRICE, TRW.TOT_VALUE + IRK.ITEM_VALUE TOT_VALUE, IRK.CAT_ID,
IRK.NEXT_CAT_ID, CASE IRK.CAT_ID WHEN TRW.CAT_ID THEN TRW.SAME_CATS + 1
ELSE 1 END SAME_CATS, IRK.MIN_ITEMS, TRW.CATS_PATH || IRK.CAT_ID
CATS_PATH, TRW.PATH || IRK.ITEM_ID PATH FROM PATHS TRW JOIN
ITEMS_RANKED IRK ON IRK.ITEM_RNK BETWEEN (TRW.ITEM_RNK + 1) AND
(IRK.N_ITEMS - (:B1 - TRW.LEV - 1)) WHERE TRW.TOT_PRICE +
IRK.ITEM_PRICE + :B5 <= :B4 AND TRW.TOT_VALUE + IRK.ITEM_VALUE + :B3 >=
:B2 AND TRW.LEV < :B1 AND CASE IRK.CAT_ID WHEN TRW.CAT_ID THEN
TRW.SAME_CATS + 1 ELSE 1 END <= IRK.MAX_ITEMS AND :B1 - (TRW.LEV + 1) +
LEAST(CAS
Plan hash value: 1216662075
------------------------------------------------------------------------------------------------------------------------------------
| Id  | Operation                | Name               | Starts | E-Rows | A-Rows |   A-Time   | Buffers |  OMem |  1Mem | Used-Mem |
------------------------------------------------------------------------------------------------------------------------------------
|   0 | INSERT STATEMENT         |                    |      1 |        |      0 |00:00:00.01 |      53 |       |       |          |
|   1 |  LOAD TABLE CONVENTIONAL | PATHS              |      1 |        |      0 |00:00:00.01 |      53 |       |       |          |
|*  2 |   VIEW                   |                    |      1 |      1 |    443 |00:00:00.01 |      20 |       |       |          |
|   3 |    WINDOW SORT           |                    |      1 |      1 |    453 |00:00:00.01 |      20 |   106K|   106K|96256  (0)|
|   4 |     NESTED LOOPS         |                    |      1 |      1 |    453 |00:00:00.01 |      20 |       |       |          |
|*  5 |      TABLE ACCESS FULL   | PATHS              |      1 |      1 |    405 |00:00:00.01 |      17 |       |       |          |
|*  6 |      INDEX RANGE SCAN    | SYS_IOT_TOP_179621 |    405 |      1 |    453 |00:00:00.01 |       3 |       |       |          |
------------------------------------------------------------------------------------------------------------------------------------
Predicate Information (identified by operation id):
---------------------------------------------------
2 - filter(("PATH_RNK"<=:B7 OR :B7=0))
5 - filter("TRW"."LEV"<:B1)
6 - access("IRK"."ITEM_RNK">="TRW"."ITEM_RNK"+1)
filter(("TRW"."TOT_PRICE"+"IRK"."ITEM_PRICE"+:B5<=:B4 AND "TRW"."TOT_VALUE"+"IRK"."ITEM_VALUE"+:B3>=:B2 AND
"IRK"."ITEM_RNK"<="IRK"."N_ITEMS"-(:B1-"TRW"."LEV"-1) AND "IRK"."MAX_ITEMS">=CASE "IRK"."CAT_ID" WHEN "TRW"."CAT_ID" THEN
"TRW"."SAME_CATS"+1 ELSE 1 END  AND "IRK"."MIN_REMAIN"<=:B1-("TRW"."LEV"+1)+LEAST(CASE "IRK"."CAT_ID" WHEN "TRW"."CAT_ID"
THEN "TRW"."SAME_CATS"+1 ELSE 1 END ,"IRK"."MIN_ITEMS") AND ("IRK"."CAT_ID"="TRW"."CAT_ID" OR
"TRW"."SAME_CATS">="TRW"."MIN_ITEMS") AND ("IRK"."CAT_ID"="TRW"."CAT_ID" OR
"IRK"."CAT_ID"=NVL("TRW"."NEXT_CAT_ID","IRK"."CAT_ID"))))
Note
-----
- dynamic statistics used: dynamic sampling (level=2)
Timer Set: Pop_Table_Iterate, Constructed at 14 Jun 2024 10:37:05, written at 10:37:05
======================================================================================
Timer                     Elapsed         CPU       Calls       Ela/Call       CPU/Call
---------------------  ----------  ----------  ----------  -------------  -------------
Initial delete (0)           0.00        0.00           1        0.00000        0.00000
Initial insert (1)           0.00        0.00           1        0.00000        0.00000
Insert paths 1 (20)          0.00        0.00           1        0.00100        0.00000
Delete paths 1 (1)           0.00        0.00           1        0.00000        0.00000
Insert paths 2 (270)         0.00        0.00           1        0.00300        0.00000
Delete paths 2 (20)          0.00        0.00           1        0.00000        0.00000
Insert paths 3 (270)         0.03        0.00           1        0.02600        0.00000
Delete paths 3 (270)         0.00        0.00           1        0.00100        0.00000
Insert paths 4 (270)         0.01        0.01           1        0.01300        0.01000
Delete paths 4 (270)         0.00        0.00           1        0.00000        0.00000
Insert paths 5 (540)         0.02        0.00           1        0.01700        0.00000
Delete paths 5 (270)         0.00        0.00           1        0.00100        0.00000
Insert paths 6 (540)         0.02        0.02           1        0.02400        0.02000
Delete paths 6 (540)         0.00        0.00           1        0.00000        0.00000
Insert paths 7 (540)         0.01        0.01           1        0.01300        0.01000
Delete paths 7 (540)         0.00        0.00           1        0.00000        0.00000
Insert paths 8 (452)         0.01        0.00           1        0.00900        0.00000
Delete paths 8 (540)         0.00        0.00           1        0.00100        0.00000
Insert paths 9 (405)         0.01        0.00           1        0.00600        0.00000
Delete paths 9 (452)         0.00        0.00           1        0.00100        0.00000
Insert paths 10 (443)        0.24        0.07           1        0.23800        0.07000
Delete paths 10 (405)        0.00        0.00           1        0.00100        0.00000
Insert paths 11 (54)         0.00        0.00           1        0.00100        0.00000
Delete paths 11 (443)        0.00        0.00           1        0.00100        0.00000
Insert paths 12 (0)          0.00        0.00           1        0.00000        0.00000
Delete paths 12 (54)         0.00        0.00           1        0.00100        0.00000
(Other)                      0.00        0.00           1        0.00000        0.00000
---------------------  ----------  ----------  ----------  -------------  -------------
Total                        0.36        0.11          27        0.01326        0.00407
---------------------  ----------  ----------  ----------  -------------  -------------
[Timer timed (per call in ms): Elapsed: 0.01408, CPU: 0.00704]
Timer Set: Iteratively_Refine_Iterate, Constructed at 14 Jun 2024 10:37:04, written at 10:37:05
===============================================================================================
Timer                                           Elapsed         CPU       Calls       Ela/Call       CPU/Call
-------------------------------------------  ----------  ----------  ----------  -------------  -------------
PTI 1: MIN_VALUE / KEEP_NUM = 0 / 10               0.33        0.26           1        0.33000        0.26000
SELECT 1: MIN_VALUE / KEEP_NUM = 0 / 10            0.00        0.00           1        0.00200        0.00000
PTI 2: MIN_VALUE / KEEP_NUM = 0 / 30               0.29        0.24           1        0.28700        0.24000
SELECT 2: MIN_VALUE / KEEP_NUM = 0 / 30            0.00        0.00           1        0.00000        0.00000
PTI 3: MIN_VALUE / KEEP_NUM = 0 / 90               0.34        0.29           1        0.33900        0.29000
SELECT 3: MIN_VALUE / KEEP_NUM = 0 / 90            0.00        0.00           1        0.00000        0.00000
PTI (final): MIN_VALUE / KEEP_NUM = 0 / 270        0.46        0.16           1        0.45900        0.16000
(Other)                                            0.00        0.00           1        0.00000        0.00000
-------------------------------------------  ----------  ----------  ----------  -------------  -------------
Total                                              1.42        0.95           8        0.17713        0.11875
-------------------------------------------  ----------  ----------  ----------  -------------  -------------
[Timer timed (per call in ms): Elapsed: 0.01149, CPU: 0.00690]

PL/SQL procedure successfully completed.

Elapsed: 00:00:01.53
Iteratively_Refine_Iterate - 10'th to 1'st highest values, then corresponding prices

Summary
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8000, , , , , , , , , , ; Prices: , , , , , , , , , ; 1 : Values, Prices, Seconds

Elapsed: 00:00:00.00
Iteratively_Refine_Iterate - Best and Worst

Summary
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8000, 0, 0, 1 - BEST (V, P): (, ); WORST (V, P): (, ); Seconds: 1

Elapsed: 00:00:00.00
Iteratively_Refine_Iterate

no rows selected

Elapsed: 00:00:00.00

PL/SQL procedure successfully completed.

Elapsed: 00:00:00.00
Timer Set: Item_Cat_Seqs_Loop, Constructed at 14 Jun 2024 10:37:04, written at 10:37:05
=======================================================================================
Timer                                       Elapsed         CPU       Calls       Ela/Call       CPU/Call
---------------------------------------  ----------  ----------  ----------  -------------  -------------
Iteratively_Refine_Iterate - path level        1.55        1.02           1        1.54900        1.02000
(Other)                                        0.00        0.00           1        0.00200        0.00000
---------------------------------------  ----------  ----------  ----------  -------------  -------------
Total                                          1.55        1.02           2        0.77550        0.51000
---------------------------------------  ----------  ----------  ----------  -------------  -------------
[Timer timed (per call in ms): Elapsed: 0.01266, CPU: 0.00886]

PL/SQL procedure successfully completed.


'END:'||TO_CHAR(SYSDATE,'DD-MON-YY
----------------------------------
End: 14-JUN-2024 10:37:06

